#coding=utf-8

import cv2
import numpy as np
from matplotlib import pyplot as plt
img = cv2.imread('../image/test2.jpg',cv2.IMREAD_COLOR)
im = cv2.fastNlMeansDenoisingColored(img,None,10,10,7,21)
imgray=cv2.cvtColor(im,cv2.COLOR_BGR2GRAY)
ret,thresh = cv2.threshold(imgray,127,155,0)
contours, hierarchy = cv2.findContours(thresh,cv2.RETR_EXTERNAL,cv2.CHAIN_APPROX_SIMPLE)

c = sorted(contours, key=cv2.contourArea, reverse=True)[0]

# compute the rotated bounding box of the largest contour
rect = cv2.minAreaRect(c)
box = np.int0(cv2.cv.BoxPoints(rect))

cv2.drawContours(im,contours,-1,(0,0,255),3)

Xs = [i[0] for i in box]
Ys = [i[1] for i in box]
x1 = min(Xs)
x2 = max(Xs)
y1 = min(Ys)
y2 = max(Ys)
hight = y2 - y1
width = x2 - x1
cropImg = img[y1:y1+hight, x1:x1+width]

'''sp[0]为高，sp[1]为宽'''
sp = cropImg.shape

'''处理'''
sp1 = int(sp[0]*0.1)
sp2 = int(sp[1]*0.1)

for num1 in range(1,sp2):
	for num2 in range(1,sp[1]):
		cropImg[num1,num2] = 230

for num1 in range(1,sp[0]):
	for num2 in range(1,sp2):
		cropImg[num1,num2] = 230

for num1 in range(1,sp[0]):
	for num2 in range(sp[1]-sp2,sp[1]):
		cropImg[num1,num2] = 230

for num1 in range(sp[0]-sp2,sp[0]):
	for num2 in range(1,sp[1]):
		cropImg[num1,num2] = 230

cv2.namedWindow('image', cv2.WINDOW_NORMAL)
cv2.namedWindow('Image', cv2.WINDOW_NORMAL)
cv2.imshow("image",im)
cv2.imshow("Image", cropImg)
cv2.waitKey(0)

"""
cv2.imshow("pic",img)
cv2.imwrite(../image/IMG_0358_meitu_1_after.jpg,img)
"""
